-module(playerlang_app).

-behaviour(application).

-define(PLAYERLANG_LIB, "playerlang").

%% Application callbacks
-export([start/0, stop/0]).

-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").
-endif.

%% ===================================================================
%% Application callbacks
%% ===================================================================

start() ->
    % case erl_ddll:load_driver(".", playerlang_drv) of
    %     ok -> ok;
    %     {error, already_loaded} -> ok;
    %     _ -> exit({error, could_not_load_driver})
    % end,
    % spawn(?MODULE, init, [?PLAYERLANG_LIB]),
    playerlang_sup:start_link().

% init() ->
%     % register(play, self()),
%     % Port = open_port({spawn, ?PLAYERLANG_LIB}, [])
%     ok.

stop() ->
    ok.

-ifdef(TEST).

simple_test() ->
        ok = application:start(playerlang),
            ?assertNot(undefined == whereis(playerlang_sup)).

-endif.
